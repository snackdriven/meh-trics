export const uiText = {
  createHabit: {
    dialogTitle: "Create New Habit",
    emojiLabel: "Emoji",
    nameLabel: "Habit Name",
    namePlaceholder: "e.g., Drink 8 glasses of water",
    descriptionLabel: "Description (optional)",
    descriptionPlaceholder: "Why is this habit important to you?",
    frequencyLabel: "Frequency",
    targetCountLabel: "Target Count",
    targetCountPlaceholder: "1",
    startDateLabel: "Start Date",
    endDateLabel: "End Date (optional)",
    cancel: "Cancel",
    submit: "Create Habit",
    submitting: "Creating...",
  },
  editHabit: {
    dialogTitle: "Edit Habit",
    emojiLabel: "Emoji",
    nameLabel: "Habit Name",
    namePlaceholder: "e.g., Drink 8 glasses of water",
    descriptionLabel: "Description (optional)",
    descriptionPlaceholder: "Why is this habit important to you?",
    frequencyLabel: "Frequency",
    targetCountLabel: "Target Count",
    targetCountPlaceholder: "1",
    startDateLabel: "Start Date",
    endDateLabel: "End Date (optional)",
    cancel: "Cancel",
    submit: "Update Habit",
    submitting: "Updating...",
  },
  createRecurringTask: {
    dialogTitle: "Create Recurring Task Template",
    titleLabel: "Title",
    titlePlaceholder: "What task should be created regularly?",
    descriptionLabel: "Description",
    descriptionPlaceholder: "Any additional details...",
    frequencyLabel: "Frequency",
    priorityLabel: "Priority",
    maxOccurrencesLabel: "Times / cycle",
    energyLevelLabel: "Energy Level",
    energySelectPlaceholder: "Select energy",
    nextDueDateLabel: "Next Due Date",
    tagLabel: "Tags",
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
    cancel: "Cancel",
    submit: "Create Template",
    submitting: "Creating...",
  },
  editRecurringTask: {
    dialogTitle: "Edit Recurring Task Template",
    titleLabel: "Title",
    titlePlaceholder: "What task should be created regularly?",
    descriptionLabel: "Description",
    descriptionPlaceholder: "Any additional details...",
    frequencyLabel: "Frequency",
    priorityLabel: "Priority",
    maxOccurrencesLabel: "Times / cycle",
    energyLevelLabel: "Energy Level",
    energySelectPlaceholder: "Select energy",
    nextDueDateLabel: "Next Due Date",
    tagLabel: "Tags",
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
    cancel: "Cancel",
    submit: "Update Template",
    submitting: "Updating...",
  },
  createTask: {
    dialogTitle: "Create New Task",
    titleLabel: "Title",
    titlePlaceholder: "What needs to be done?",
    descriptionLabel: "Description",
    descriptionPlaceholder: "Any additional details...",
    priorityLabel: "Priority",
    energyLevelLabel: "Energy Level",
    energySelectPlaceholder: "Select energy",
    dueDateLabel: "Due Date",
    hardDeadlineLabel: "This is a hard deadline (can't be moved)",
    tagLabel: "Tags",
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
    cancel: "Cancel",
    submit: "Create Task",
    submitting: "Creating...",
  },
  editTask: {
    dialogTitle: "Edit Task",
    titleLabel: "Title",
    titlePlaceholder: "What needs to be done?",
    descriptionLabel: "Description",
    descriptionPlaceholder: "Any additional details...",
    priorityLabel: "Priority",
    energyLevelLabel: "Energy Level",
    energySelectPlaceholder: "Select energy",
    dueDateLabel: "Due Date",
    hardDeadlineLabel: "This is a hard deadline (can't be moved)",
    tagLabel: "Tags",
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
    cancel: "Cancel",
    submit: "Update Task",
    submitting: "Updating...",
  },
  createEvent: {
    dialogTitle: "Create New Event",
    titleLabel: "Event Title",
    titlePlaceholder: "What's happening?",
    descriptionLabel: "Description",
    descriptionPlaceholder: "Additional details...",
    locationLabel: "Location",
    locationPlaceholder: "Where is this happening?",
    allDayLabel: "All day event",
    startDateLabel: "Start Date",
    startTimeLabel: "Start Time",
    endDateLabel: "End Date",
    endTimeLabel: "End Time",
    colorLabel: "Color",
    recurrenceLabel: "Repeat",
    recurrenceEndDateLabel: "Repeat Until (optional)",
    tagLabel: "Tags",
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
    cancel: "Cancel",
    submit: "Create Event",
    submitting: "Creating...",
  },
  editEvent: {
    dialogTitle: "Edit Event",
    titleLabel: "Event Title",
    titlePlaceholder: "What's happening?",
    descriptionLabel: "Description",
    descriptionPlaceholder: "Additional details...",
    locationLabel: "Location",
    locationPlaceholder: "Where is this happening?",
    allDayLabel: "All day event",
    startDateLabel: "Start Date",
    startTimeLabel: "Start Time",
    endDateLabel: "End Date",
    endTimeLabel: "End Time",
    colorLabel: "Color",
    recurrenceLabel: "Repeat",
    recurrenceEndDateLabel: "Repeat Until (optional)",
    tagLabel: "Tags",
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
    cancel: "Cancel",
    submit: "Update Event",
    submitting: "Updating...",
  },
  dayDetail: {
    moodNotesPlaceholder: "How are you feeling?",
    journalNotesPlaceholder: "Notes...",
  },
  tagSelector: {
    customTagPlaceholder: "Add custom tag...",
    addButton: "Add",
  },
} as const;
export type UiText = typeof uiText;
